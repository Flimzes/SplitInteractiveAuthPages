<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="@Assets["lib/bootstrap/dist/css/bootstrap.min.css"]" />
    <link rel="stylesheet" href="@Assets["app.css"]" />
    <link rel="stylesheet" href="@Assets["BlazorApp1.styles.css"]" />
    <ImportMap />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet @rendermode="PageRenderMode" />
</head>

<body>
    @if(IsAccountPage) {
        <ServerRoutes @rendermode="PageRenderMode" />
    }
    else {
        <Routes @rendermode="PageRenderMode" />
    }
    <script src="_framework/blazor.web.js"></script>
</body>

</html>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;
    private bool IsAccountPage => HttpContext.Request.Path.StartsWithSegments("/Account");

    private IComponentRenderMode? PageRenderMode =>
        HttpContext.AcceptsInteractiveRouting() ? RenderModeForPage : null;
    private IComponentRenderMode? RenderModeForPage => HttpContext.Request.Path.StartsWithSegments("/Account")
        ? IsStaticPage ? null : InteractiveServer : InteractiveAuto;
    private bool IsStaticPage { get {
            if(HttpContext.Request.Path.StartsWithSegments("/Account/LoginWith2fa"))
                return true;
            if(HttpContext.Request.Path.StartsWithSegments("/Account/ExternalLogin"))
                return true;
            if(HttpContext.Request.Path.StartsWithSegments("/Account/Login"))
                return true;
            if(HttpContext.Request.Path.StartsWithSegments("/Account/LoginWithRecoveryCode"))
                return true;
            return false;
        }
    }
}